{"version":3,"file":"static/js/574.6258c6f1.chunk.js","mappings":"wZAqBMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGCC,EAAa,WACxB,OAAoCC,EAAAA,EAAAA,KAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAClBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,WACfC,EAAOC,YACPP,IACAG,EAAS,IACV,EAEKG,GAASE,EAAAA,EAAAA,IAAU,CACvBhB,cAAAA,EACAiB,SAAU,SAAAC,GACRT,GAASU,EAAAA,EAAAA,IAAOD,IAChBJ,EAAOC,YACPP,IACAG,EAAS,IACV,IAOH,OAJAS,EAAAA,EAAAA,YAAU,WACRb,GACD,GAAE,CAACA,KAGF,+BACE,UAAC,IAAD,CAAQD,OAAQA,EAAQe,UAAU,QAAQb,QAASK,EAAnD,WACE,SAAC,IAAD,KACA,UAAC,IAAD,YACE,SAAC,IAAD,KACA,SAAC,IAAD,sCACA,kBAAMI,SAAUH,EAAOQ,aAAvB,WACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAQC,QAAS,EAAGC,MAAM,aAA1B,WACE,UAAC,KAAD,YACE,SAAC,IAAD,CAAWC,QAAQ,OAAnB,wBACA,SAAC,EAAAC,EAAD,CACEC,GAAG,OACH1B,KAAK,OACL2B,KAAK,OACLC,YAAY,sBACZC,WAAS,EACTC,UAAQ,EACRC,QAAQ,UACRC,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOI,OAAOjB,WAGzB,UAAC,KAAD,YACE,SAAC,IAAD,CAAWwB,QAAQ,QAAnB,oBACA,SAAC,EAAAC,EAAD,CACEC,GAAG,QACH1B,KAAK,QACL2B,KAAK,QACLC,YAAY,kBACZE,UAAQ,EACRC,QAAQ,UACRC,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOI,OAAOhB,YAGzB,UAAC,KAAD,YACE,SAAC,IAAD,CAAWuB,QAAQ,WAAnB,uBACA,SAAC,EAAAC,EAAD,CACEC,GAAG,WACH1B,KAAK,WACL2B,KAAK,OACLC,YAAY,qBACZE,UAAQ,EACRK,UAAU,IACVC,aAAa,MACbL,QAAQ,UACRC,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOI,OAAOf,oBAK7B,UAAC,IAAD,YACE,SAAC,IAAD,CACE6B,QAAQ,UACRM,GAAI,EACJ,aAAW,SACXC,QAAS1B,EAJX,qBAQA,SAAC,IAAD,CAAQe,KAAK,SAAS,aAAW,UAAUY,YAAY,OAAvD,kCASb,ECzHYC,EAAS,WACpB,OACE,SAAC,IAAD,CAAWC,KAAK,eAAhB,UACE,UAAC,KAAD,CAAKC,GAAG,OAAR,WACE,SAAC,IAAD,CAASC,KAAK,MAAd,4BACA,SAACxC,EAAD,QAIP,C","sources":["components/Forms/SignUpForm.js","pages/SignUp.js"],"sourcesContent":["import {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { useFormik } from 'formik';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/user/operations';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const SignUpForm = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onCancel = () => {\n    formik.resetForm();\n    onClose();\n    navigate('/');\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit: values => {\n      dispatch(signUp(values));\n      formik.resetForm();\n      onClose();\n      navigate('/');\n    },\n  });\n\n  useEffect(() => {\n    onOpen();\n  }, [onOpen]);\n\n  return (\n    <>\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={onCancel}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>Input your information</DrawerHeader>\n          <form onSubmit={formik.handleSubmit}>\n            <DrawerBody>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl>\n                  <FormLabel htmlFor=\"name\">Your Name</FormLabel>\n                  <Input\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Type your name here\"\n                    autoFocus\n                    required\n                    variant=\"flushed\"\n                    onChange={formik.handleChange}\n                    value={formik.values.name}\n                  />\n                </FormControl>\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Email</FormLabel>\n                  <Input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Type email here\"\n                    required\n                    variant=\"flushed\"\n                    onChange={formik.handleChange}\n                    value={formik.values.email}\n                  />\n                </FormControl>\n                <FormControl>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"text\"\n                    placeholder=\"Type password here\"\n                    required\n                    minlength=\"7\"\n                    autoComplete=\"off\"\n                    variant=\"flushed\"\n                    onChange={formik.handleChange}\n                    value={formik.values.password}\n                  />\n                </FormControl>\n              </VStack>\n            </DrawerBody>\n            <DrawerFooter>\n              <Button\n                variant=\"outline\"\n                mr={3}\n                aria-label=\"cancel\"\n                onClick={onCancel}\n              >\n                Cancel\n              </Button>\n              <Button type=\"submit\" aria-label=\"sign up\" colorScheme=\"teal\">\n                Sign Up\n              </Button>\n            </DrawerFooter>\n          </form>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n","import { Box, Container, Heading } from '@chakra-ui/react';\nimport { SignUpForm } from 'components/Forms/SignUpForm';\n\nexport const SignUp = () => {\n  return (\n    <Container maxW=\"container.lg\">\n      <Box as=\"main\">\n        <Heading size=\"2xl\">Sign up page </Heading>\n        <SignUpForm />\n      </Box>\n    </Container>\n  );\n};\n"],"names":["initialValues","name","email","password","SignUpForm","useDisclosure","isOpen","onOpen","onClose","dispatch","useDispatch","navigate","useNavigate","onCancel","formik","resetForm","useFormik","onSubmit","values","signUp","useEffect","placement","handleSubmit","spacing","align","htmlFor","I","id","type","placeholder","autoFocus","required","variant","onChange","handleChange","value","minlength","autoComplete","mr","onClick","colorScheme","SignUp","maxW","as","size"],"sourceRoot":""}